C51 COMPILER V7.20   CONTATINHOS                                                           07/13/2023 17:40:36 PAGE 1   


C51 COMPILER V7.20, COMPILATION OF MODULE CONTATINHOS
OBJECT MODULE PLACED IN contatinhos.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE contatinhos.c BROWSE DEBUG OBJECTEXTEND TABS(10)

line level    source

   1          /*Agenda de Contatos*/
   2          // Arquivos necessários
   3          #include "sll.h"
   4          #include <reg52.h>
   5          #include <stdio.h>
   6          #include <string.h>
   7          
   8          // estruturas
   9          struct nasc {
  10            char dia;
  11            char mes;
  12            unsigned int ano;
  13          };
  14          
  15          struct registro {
  16            char nome[32]; // no final tem o 0 - 31 caracteres
  17            char tel[14];  // 13 caracteres
  18            struct nasc datan;
  19            char relacionamento;
  20          };
  21          
  22          struct registro code contatosold[10] = {
  23            "Lindomar Mir",     "71974859614", 12, 6, 2007, 0,
  24            "Clea Santos",      "71987412345", 20, 6, 2003, 1,
  25            "Franklin Savaget", "72999121620", 18, 6, 2008, 2,
  26            "Mariana Barros",   "74974859613", 12, 6, 2002, 3,
  27            "José Eduardo",     "71974859613", 30, 6, 1989, 4,
  28            "Tatiana Oliveira", "71974859610", 12, 6, 1999, 5,
  29            "Camila de Jesus",  "71974859615", 1,  6, 1957, 6,
  30            "Louise Poliana",   "79987514952", 30, 6, 1962, 7,
  31            "Heitor Dias",      "71984125247", 12, 6, 1975, 8,
  32            "Reinaldo Goes",    "71974859618", 27, 8, 1978, 9};
  33          
  34          struct registro xdata contatos[500];
  35          
  36          // funcao principal
  37          void main(void) {
  38   1        // declaracoes de variaveis
  39   1        char c;
  40   1        int n;
  41   1        char string[32];
  42   1        TMOD = 0x20;
  43   1        SCON = 0X52;
  44   1        TH1 = (256 - 13);
  45   1        PCON |= 0X80;
  46   1        TR1 = 1;
  47   1        // limpeza
  48   1        memset(&contatos, 0, sizeof(contatos));
  49   1        // copia struc old para contatos
  50   1        memcpy(&contatos, &contatosold, sizeof(contatosold));
  51   1      
  52   1        while (1) {
  53   2          printf("\f+-----------------------------------+\n"
  54   2            "|                                   |\n"
  55   2            "|     AGENDA DE CONTATOS            |\n"
C51 COMPILER V7.20   CONTATINHOS                                                           07/13/2023 17:40:36 PAGE 2   

  56   2            "|                                   |\n");
  57   2      
  58   2          printf("| Menu - Digite a opção desejada    |\n");
  59   2          printf("| [L] - Lista de Contatos           |\n");
  60   2          printf("| [N] - Pesquisa por nome           |\n");
  61   2          printf("| [I] - Pesquisa por idade          |\n");
  62   2          printf("| [R] - Pesquisa por Relacionamento | \n");
  63   2          printf("| [A] - Adcionar contato            |\n");
  64   2          printf("| [D] - Deletar contato             |\n");
  65   2          printf("| [E] - Renomear contato            | \n");
  66   2          printf("+-----------------------------------+\n\n");
  67   2      
  68   2          c = getchar();
  69   2      
  70   2          if (c == 'l' || c == 'L') {
  71   3            // Lógica para listar os contatos
  72   3            printf("/f");
  73   3            printf("Lista de Contatos selecionada.\n");
  74   3            for (n = 0; n < 500; n++) {
  75   4              // exibe todos contatos da lista
  76   4              if (contatos[n].nome[0] != 0) {       
  77   5                printf("%s %s %bd\n", contatos[n].nome, contatos[n].tel,
  78   5                contatos[n].relacionamento);
  79   5              }
  80   4            }
  81   3            printf("\n Pressione espaço para continuar");
  82   3            while (getchar() != ' ')
  83   3              ;
  84   3      
  85   3          } 
  86   2          else if (c == 'n' || c == 'N') {
  87   3            // Lógica para pesquisar por nome
  88   3            printf("Pesquisa por nome selecionada.\n");
  89   3            gets(string, 32);
  90   3            printf("Digite o nome\n");
  91   3            for (n = 0; n < 500; n++) {
  92   4              if (strstr(contatos[n].nome, string) != NULL) {
  93   5                printf("%s %s %bd\n", contatos[n].nome, contatos[n].tel,
  94   5                contatos[n].relacionamento);
  95   5              }
  96   4            }
  97   3            printf("\n Pressione espaço para continuar");
  98   3            while (getchar() != ' ');
  99   3          } 
 100   2          else if (c == 'i' || c == 'I') {
 101   3      
 102   3            // Lógica para pesquisar por idade
 103   3            printf("Pesquisa por idade selecionada.\n");
 104   3          } 
 105   2          else if (c == 'r' || c == 'R') {
 106   3      
 107   3            // Lógica para pesquisar por relacionamento
 108   3            printf("Pesquisa por relacionamento selecionada.\n");
 109   3      
 110   3          } 
 111   2          else if (c == 'a' || c == 'A') {
 112   3            // Lógica para adicionar contato
 113   3            printf("Adicionar contato selecionado.\n");
 114   3      
 115   3            for (n = 0; n < 500; n++) {
 116   4              if (contatos[n].nome[0] == 0) {
 117   5      
C51 COMPILER V7.20   CONTATINHOS                                                           07/13/2023 17:40:36 PAGE 3   

 118   5                printf("Insira o nome\n");
 119   5                scanf("%s", contatos[n].nome);
 120   5      
 121   5                printf("Digite o telefone do contato: ");
 122   5                scanf("%s", contatos[n].tel);
 123   5      
 124   5                printf("Digite a data de nascimento do contato (dia mês ano): ");
 125   5                scanf("%d %d %d", contatos[n].datan.dia, contatos[n].datan.mes,
 126   5                contatos[n].datan.ano);
 127   5      
 128   5                printf("Digite o relacionamento do contato: ");
 129   5                scanf(" %c", contatos[n].relacionamento);
 130   5      
 131   5                printf("\n Pressione espaço para voltar");
 132   5                while (getchar() != ' ');
 133   5                break;
 134   5      
 135   5              } 
 136   4            }
 137   3          } 
 138   2          else if (c == 'd' || c == 'D') {
 139   3            // Lógica para deletar contato
 140   3            printf("Deletar contato selecionado.\n");
 141   3      
 142   3          } 
 143   2          else if (c == 'e' || c == 'E') {
 144   3            // Lógica para renomear contato
 145   3            gets(string, 32);
 146   3            printf("Digite o nome\n");
 147   3            gets(string, 32);
 148   3            for (n = 0; n < 500; n++) {
 149   4              if (strstr(contatos[n].nome, string) != NULL) {
 150   5                printf("%d""º " "%s %s %bd\n",n, contatos[n].nome, contatos[n].tel,
 151   5                contatos[n].relacionamento);
 152   5              }
 153   4            }
 154   3            printf("\n Pressione espaço para continuar");
 155   3            while (getchar() != ' ');
 156   3           
 157   3      
 158   3          } // else if E 
 159   2          else {
 160   3            printf("\nOpção inválida. Tente novamente.\n");
 161   3            while (getchar() != ' ');
 162   3          }
 163   2        } // while primario
 164   1      } // main


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1158    ----
   CONSTANT SIZE    =   1517    ----
   XDATA SIZE       =  25500    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      35
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
