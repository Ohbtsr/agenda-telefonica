C51 COMPILER V7.20   CONTATINHOS                                                           07/14/2023 21:17:20 PAGE 1   


C51 COMPILER V7.20, COMPILATION OF MODULE CONTATINHOS
OBJECT MODULE PLACED IN contatinhos.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE contatinhos.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          /*Agenda de Contatos*/
   2          // Arquivos necessários
   3          #include "sll.h"
   4          #include <reg52.h>
   5          #include <stdio.h>
   6          #include <string.h>
   7          
   8          // estruturas
   9          struct nasc {
  10            unsigned int dia;
  11            unsigned int mes;
  12            unsigned int ano;
  13          };
  14          
  15          struct registro {
  16            char nome[32]; // no final tem o 0 - 31 caracteres
  17            char tel[14];  // 13 caracteres
  18            struct nasc datan;
  19            char relacionamento;
  20          };
  21          
  22          struct registro code contatosold[10] = {
  23            "Lindomar Mir",     "71974859614", 12, 6, 2007, 0,
  24            "Clea Santos",      "71987412345", 20, 6, 2003, 1,
  25            "Franklin Savaget", "72999121620", 18, 6, 2008, 2,
  26            "Mariana Barros",   "74974859613", 12, 6, 2002, 3,
  27            "José Eduardo",     "71974859613", 30, 6, 1989, 4,
  28            "Tatiana Oliveira", "71974859610", 12, 6, 1999, 5,
  29            "Camila de Jesus",  "71974859615", 1,  6, 1957, 6,
  30            "Louise Poliana",   "79987514952", 30, 6, 1962, 7,
  31            "Heitor Dias",      "71984125247", 12, 6, 1975, 8,
  32            "Reinaldo Goes",    "71974859618", 27, 8, 1978, 9};
  33          
  34          struct registro xdata contatos[500];
  35          
  36          // funcao principal
  37          void main(void) {
  38   1        // declaracoes de variaveis
  39   1        char c;
  40   1        int n;
  41   1        int selecionado;
  42   1        char string[32];
  43   1        TMOD = 0x20;
  44   1        SCON = 0X52;
  45   1        TH1 = (256 - 13);
  46   1        PCON |= 0X80;
  47   1        TR1 = 1;
  48   1        // limpeza
  49   1        memset(&contatos, 0, sizeof(contatos));
  50   1        // copia struc old para contatos
  51   1        memcpy(&contatos, &contatosold, sizeof(contatosold));
  52   1      
  53   1        while (1) {
  54   2          printf("\f+-----------------------------------+\n"
  55   2            "|                                   |\n"
C51 COMPILER V7.20   CONTATINHOS                                                           07/14/2023 21:17:20 PAGE 2   

  56   2            "|     AGENDA DE CONTATOS            |\n"
  57   2            "|                                   |\n");
  58   2      
  59   2          printf("| Menu - Digite a opção desejada    |\n");
  60   2          printf("| [L] - Lista de Contatos ok          |\n");
  61   2          printf("| [N] - Pesquisa por nome  ok!!         |\n");
  62   2          printf("| [I] - Pesquisa por idade          |\n");
  63   2          printf("| [R] - Pesquisa por Relacionamento | \n");
  64   2          printf("| [A] - Adcionar contato    ok!!        |\n");
  65   2          printf("| [D] - Deletar contato             |\n");
  66   2          printf("| [E] - Renomear contato    ok!!        | \n");
  67   2          printf("+-----------------------------------+\n\n");
  68   2      
  69   2          c = getchar();
  70   2      
  71   2          if (c == 'l' || c == 'L') {
  72   3            // Lógica para listar os contatos
  73   3            printf("/f");
  74   3            printf("Lista de Contatos selecionada.\n");
  75   3            for (n = 0; n < 500; n++) {
  76   4              // exibe todos contatos da lista
  77   4              if (contatos[n].nome[0] != 0) {       
  78   5                printf("%s %s %bd\n", contatos[n].nome, contatos[n].tel,
  79   5                contatos[n].relacionamento);
  80   5              }
  81   4            }
  82   3            printf("\n Pressione espaço para continuar");
  83   3            while (getchar() != ' ')
  84   3              ;
  85   3      
  86   3          } 
  87   2          else if (c == 'n' || c == 'N') {
  88   3            // Lógica para pesquisar por nome
  89   3            printf("Pesquisa por nome selecionada.\n");
  90   3            gets(string, 32);
  91   3            printf("Digite o nome\n");
  92   3            for (n = 0; n < 500; n++) {
  93   4              if (strstr(contatos[n].nome, string) != NULL) {
  94   5                printf("%s %s %bd\n", contatos[n].nome, contatos[n].tel,
  95   5                contatos[n].relacionamento);
  96   5              }
  97   4            }
  98   3            printf("\n Pressione espaço para continuar");
  99   3            while (getchar() != ' ');
 100   3          } 
 101   2          else if (c == 'i' || c == 'I') {
 102   3      
 103   3            // Lógica para pesquisar por idade
 104   3            printf("Pesquisa por idade selecionada.\n");
 105   3          } 
 106   2          else if (c == 'r' || c == 'R') {
 107   3      
 108   3            // Lógica para pesquisar por relacionamento
 109   3            printf("Pesquisa por relacionamento selecionada.\n");
 110   3      
 111   3          } 
 112   2          else if (c == 'a' || c == 'A') {
 113   3            // Lógica para adicionar contato
 114   3            printf("Adicionar contato selecionado.\n");
 115   3      
 116   3            for (n = 0; n < 500; n++) {
 117   4              if (contatos[n].nome[0] == 0) {
C51 COMPILER V7.20   CONTATINHOS                                                           07/14/2023 21:17:20 PAGE 3   

 118   5      
 119   5                printf("Insira o nome\n");
 120   5                scanf("%s", contatos[n].nome);
 121   5      
 122   5                printf("Digite o telefone do contato: ");
 123   5                scanf("%s", contatos[n].tel);
 124   5      
 125   5                              printf("Digite a data de nascimento do contato (dia mês ano):\n ");
 126   5                              scanf("%d %d %d", &contatos[n].datan.dia, &contatos[n].datan.mes, &contatos[n].datan.ano);
 127   5                              printf("Data de Nascimento: %d / %d / %d", contatos[n].datan.dia, contatos[n].datan.mes, contatos[n].da
             -tan.ano);
 128   5      
 129   5      
 130   5                printf("\nDigite o relacionamento do contato: ");
 131   5                scanf(" %c", contatos[n].relacionamento);
 132   5      
 133   5                printf("\n Pressione espaço para voltar");
 134   5                while (getchar() != ' ');
 135   5                break;
 136   5              } 
 137   4            }
 138   3          } 
 139   2          else if (c == 'd' || c == 'D') {
 140   3            // Lógica para deletar contato
 141   3            printf("Deletar contato selecionado.\n");
 142   3      
 143   3          } 
 144   2          else if (c == 'e' || c == 'E') {
 145   3      
 146   3            // Lógica para renomear contato
 147   3            printf("\nDigite o nome do contato que deseja renomear\n");
 148   3            gets(string, 32); // Le e armazena na var string
 149   3      
 150   3                // Varre TODO o array independente se ha ou nao valores
 151   3            for (n = 0; n < 500; n++) {
 152   4      
 153   4                      // verifica se 'string' contida é diferente de null
 154   4              if (strstr(contatos[n].nome, string) != NULL) { 
 155   5                printf("%d""º " "%s %s %bd\n",n, contatos[n].nome, contatos[n].tel,
 156   5                contatos[n].relacionamento); //lista contatos com numerador
 157   5              }
 158   4            }
 159   3            printf("\nInforme o numero correspondente ao contato. \n");
 160   3      
 161   3                // Lógica verifica entrada 
 162   3                while (1) {
 163   4                      if (scanf("%d", &selecionado) != 1) {
 164   5              printf("Digite apenas números!\n");
 165   5              } else {
 166   5                        if (selecionado < 0 || selecionado > 500){
 167   6                              printf("Número fora de intervalo, digite novamente");
 168   6                    } else {
 169   6                          getchar(); // Limpa resíduos de scanf
 170   6                              break;
 171   6                        }
 172   5                      }   
 173   4                }
 174   3                // Recebe e atualiza nome
 175   3            printf("Informe o novo nome do contato:\n");
 176   3                gets(string, 32);
 177   3                strcpy(contatos[selecionado].nome, string);
 178   3                // Fim da lógica para renomear
C51 COMPILER V7.20   CONTATINHOS                                                           07/14/2023 21:17:20 PAGE 4   

 179   3      
 180   3            printf("\n --> Pressione espaço para continuar <--");
 181   3            while (getchar() != ' ');
 182   3      
 183   3          } else { // Sem correspondência das alternativas
 184   3            printf("\nOpção inválida. Tente novamente.\n");
 185   3            while (getchar() != ' ');
 186   3          }
 187   2        } // while primario
 188   1      } // main


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1345    ----
   CONSTANT SIZE    =   1825    ----
   XDATA SIZE       =  26500    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      37
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
